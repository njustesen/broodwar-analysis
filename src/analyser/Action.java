import parser.bwhf.model.Action;

import java.util.Date;

public class Action
{
  public enum Type
  {
    // upgardes
    TerranInfantryArmor,
    TerranVehiclePlating,
    TerranShipPlating,
    ZergCarapace,
    ZergFlyerCarapace,
    ProtossGroundArmor,
    ProtossAirArmor,
    TerranInfantryWeapons,
    TerranVehicleWeapons,
    TerranShipWeapons,
    ZergMeleeAttacks,
    ZergMissileAttacks,
    ZergFlyerAttacks,
    ProtossGroundWeapons,
    ProtossAirWeapons,
    ProtossPlasmaShields,
    U238Shells,
    IonThrusters,
    TitanReactor,
    OcularImplants,
    MoebiusReactor,
    ApolloReactor,
    ColossusReactor,
    VentralSacs,
    Antennae,
    PneumatizedCarapace,
    MetabolicBoost,
    AdrenalGlands,
    MuscularAugments,
    GroovedSpines,
    GameteMeiosis,
    DefilerEnergy,
    SingularityCharge,
    LegEnhancement,
    ScarabDamage,
    ReaverCapacity,
    GraviticDrive,
    SensorArray,
    GraviticBooster,
    KhaydarinAmulet,
    ApialSensors,
    GraviticThrusters,
    CarrierCapacity,
    KhaydarinCore,
    ArgusJewel,
    ArgusTalisman,
    CaduceusReactor,
    ChitinousPlating,
    AnabolicSynthesis,
    CharonBoosters,

    // researches 0x36
    StimPack,
    Lockdown,
    EMPShockwave,
    SpiderMines,
    SiegeTankMode,
    Irradiate,
    YamatoGun,
    CloackingField,
    PersonalCloacking,
    Burrow,
    SpawnBroodling,
    Plague,
    Consume,
    Ensnare,
    PsionicStorm,
    Hallucination,
    Recall,
    StatisField,
    Restoration,
    DistruptionWeb,
    Mindcontrol,
    OpticalFlare,
    Maelstorm,
    LurkerAspect,

    // units and buildings 0x56
    Marine,
    Ghost,
    Vulture,
    Goliath,
    GoliathTurret,
    SiegeTank,
    SiegeTankTurret1,
    SCV,
    Wraith,
    ScienceVessel,
    GuiMotang,
    Dropship,
    Battlecruiser,
    SpiderMine,
    NuclearMissile,
    TerranCivilian,
    SarahKerrigan,
    AlanSchezar,
    AlanSchezarTurret,
    JimRaynor1,
    JimRaynor2,
    TomKazansky,
    Magellan,
    EdmundDuke1,
    EdmundDukeTurret1,
    EdmundDuke2,
    EdmundDukeTurret2,
    ArcturusMengsk,
    Hyperion,
    NoradII1,
    TerranSiegeTank,
    SiegeTankTurret2,
    Firebat,
    ScannerSweep,
    Medic,
    Larva,
    Egg,
    Zergling,
    Hydralisk,
    Ultralisk,
    Drone,
    Overlord,
    Mutalisk,
    Guardian,
    Queen,
    Defiler,
    Scourge,
    Torrasque,
    Matriarch,
    InfestedTerran,
    InfestedKerrigan,
    UncleanOne,
    HunterKiller,
    DevouringOne,
    Kukulza1,
    Kukulza2,
    Yggdrasill,
    Valkyrie,
    MutaliskCocoon,
    Corsair,
    DarkTemplar,
    Devourer,
    DarkArchon,
    Probe,
    Zealot,
    Dragoon,
    HighTemplar,
    Archon,
    Shuttle,
    Scout,
    Arbiter,
    Carrier,
    Interceptor,
    ProtossDarkTemplar,
    Zeratul,
    TassadarZeratul,
    Fenix1,
    Fenix2,
    Tassadar,
    Mojo,
    Warbringer,
    Gantrithor,
    Reaver,
    Observer,
    Scarab,
    Danimoth,
    Aldaris,
    Artanis,
    Rhynadon,
    Bengalaas,
    CargoShip,
    MercenaryGunship,
    Scantid,
    Kakaru,
    Ragnasaur,
    Ursadon,
    LurkerEgg,
    Raszagal,
    SamirDuran,
    AlexeiStukov,
    MapRevealer,
    GerardDuGalle,
    Lurker,
    InfestedDuran,
    DisruptionWeb,
    CommandCenter,
    ComSat,
    NuclearSilo,
    SupplyDepot,
    Refinery,
    Barracks,
    Academy,
    Factory,
    Starport,
    ControlTower,
    ScienceFacility,
    CovertOps,
    PhysicsLab,
    MachineShop,
    RepairBay,
    EngineeringBay,
    Armory,
    MissileTurret,
    Bunker,
    NoradII2,
    IonCannon,
    UrajCrystal,
    KhalisCrystal,
    InfestedCC,
    Hatchery,
    Lair,
    Hive,
    NydusCanal,
    HydraliskDen,
    DefilerMound,
    GreaterSpire,
    QueensNest,
    EvolutionChamber,
    UltraliskCavern,
    Spire,
    SpawningPool,
    CreepColony,
    SporeColony,
    UnusedZergBuilding1,
    SunkenColony,
    ZergOvermind,
    Overmind,
    Extractor,
    MatureChrysalis,
    Cerebrate,
    CerebrateDaggoth,
    UnusedZergBuilding2,
    Nexus,
    RoboticsFacility,
    Pylon,
    Assimilator,
    UnusedProtossBuilding1,
    Observatory,
    Gateway,
    UnusedProtossBuilding2,
    PhotonCannon,
    CitadelofAdun,
    CyberneticsCore,
    TemplarArchives,
    Forge,
    Stargate,
    StasisCellPrison,
    FleetBeacon,
    ArbiterTribunal,
    RoboticsSupportBay,
    ShieldBattery,
    KhaydarinCrystalFormation1,
    ProtossTemple,
    XelNagaTemple,
    MineralField1,
    MineralField2,
    MineralField3,
    Cave,
    CaveIn,
    Cantina,
    MiningPlatform,
    IndependentCommandCenter,
    IndependentStarport,
    IndependentJumpGate,
    Ruins,
    KhaydarinCrystalFormation2,
    VespeneGeyser,
    WarpGate,
    PsiDisrupter,
    ZergMarker,
    TerranMarker,
    ProtossMarker,
    ZergBeacon,
    TerranBeacon,
    ProtossBeacon,
    ZergFlagBeacon,
    TerranFlagBeacon,
    ProtossFlagBeacon,
    PowerGenerator,
    OvermindCocoon,
    DarkSwarm,
    FloorMissileTrap,
    FloorHatch,
    LeftUpperLevelDoor,
    RightUpperLevelDoor,
    LeftPitDoor,
    RightPitDoor,
    FloorGunTrap,
    LeftWallMissileTrap,
    LeftWallFlameTrap,
    RightWallMissileTrap,
    RightWallFlameTrap,
    StartLocation,
    Flag,
    YoungChrysalis,
    PsiEmitter,
    DataDisc,
    KhaydarinCrystal,
    MineralClusterType1,
    MineralClusterType2,
    ProtossVespeneGasOrbType1,
    ProtossVespeneGasOrbType2,
    ZergVespeneGasSacType1,
    ZergVespeneGasSacType2,
    TerranVespeneGasTankType1,
    TerranVespeneGasTankType2,
  }

  public Date time;
  public Type type;

  public Action(Date time, parser.bwhf.model.Action action)
  {
    this.time = time;

    if (action.actionNameIndex == 0x0c) // build
      type = Type.class.getEnumConstants()[0x56 + action.parameterBuildingNameIndex];

    if (action.actionNameIndex == 0x1f || action.actionNameIndex == 0x23) // train
      type = Type.class.getEnumConstants()[0x56 + action.parameterUnitNameIndex];

    if (action.actionNameIndex == 0x30) // reserch
      type = Type.class.getEnumConstants()[0x36 + action.parameterUnitNameIndex];

    if (action.actionNameIndex == 0x32) // upgrade
      type = Type.class.getEnumConstants()[action.parameterUnitNameIndex];
  }
}
